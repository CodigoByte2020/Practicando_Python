VERSION DE PYTHON INSTALADO 3.6.7

CLASE 01:
INTRODUCCI�N:
------------------------------------------------------------------

CLASE 02:
CARACTER�STICAS:
No es necesario declarar el tipo de la variable
Es interpretado
Orienta a Objetos
Tipado din�mico y fuerte

CLASE 03:
SINTAXIS B�SICA:
Cada instrucci�n debe ir en una l�nea
Si van mas de una instrucci�n, separar por punto y coma

CLASE 04:
TIPOS, OPERADORES Y VARIABLES:
Num�ricos: int, float, complejos
Textos
Booleanos: true or false 

En python absolutamente todo es un objeto 100%

CLASE 05, 06:
FUNCIONES:
A las funciones tambi�n se les denominan m�todos cuando son definidas dentro de una clase.
Python pasa los valores de los par�metros por referencia

CLASE 07:
LAS LISTAS: []
Nos permiten almacenar muchos valores
Pueden guardar diferentes tipos de valores
Se pueden a�adir din�micamente a�adiendo nuevos elementos
Son muy parecidos a los arrays en Java.

CLASE 08: LAS TUPLAS: ()
Son listas inmutables, no se pueden modificar despu�s de su creaci�n.
Permiten extraer porciones, el resultado es un nuevo tupla.
Formatean strings
Las tuplas ocupan menos espacio que las listas.
Pueden utilizarse como claves en un diccionario (listas no)

CLASE 09: LOS DICCIONARIOS:
Estructura de datos que nos permite almacenar valores de diferente tipo (entero, texto, etc),
inculuso listas, tuplas y otros diccionarios, etc.
Los datos se almacenan asociados a una clave (clave:valor)
Los elementos almacenados no estan ordenados.
kees() Devuelve las clavesConcatencaci�n de operadores de comparaci�n
values() valores
len() longitud

CLASE 10, 11, 12: ESTRUCTURAS DE CONTROL DE FLUJO (CONDICIONALES)
if, elif, else, --- switch --- no existe
Concatencaci�n de operadores de comparaci�n
Operadores l�gicos and or
operador in
Una condici�n con concatenaci�n de operadores de comparaci�n se lee de izquierda a derecha
and = y si adem�s
or = o sino
in = en
Python es case sensitive: distingue entre MAY�SCULAS y min�sculas

CLASE 14, 15, 16: ESTRUCTURAS DE CONTROL DE FLUJO (BUCLES)
FOR:
BUCLES: Determinados, sabemos cuantas veces se repetira
Indeterminados, se ejecutar� el n�mero de veces seg�n las cirscunstancias de ejecuci�n del programa
range = un tipo de dato

print(f"Valor de variable {i}")
la f indica que usaremos una notaci�n especial, para usar formatos diferentes
entre llaves la variable
concatemos el texto con la variable

CLASE 17:
WHILE: ciclo Indeterminado

CLASE 18: BUCLES: WHILE, FOR
CONTINUE salta a la sgte iteraci�n del bucle
PASS devuelve null cuando se lee en el interior del bucle
ELSE igual que con el if

CLASE 19: GENERADORES: yield
Estructuras que extraen valores de una funci�n y se almacenan en objetos iterables (que se pueden recorrer)
Estos valores se almacenan de uno en uno.
Cada vez que un generador almacena un valor, este permanece en un estado pausado, hasta que se solicita el 
siguiente. Esta caracter�stica es conocida como "suspensi�n de estado".

CLASE 20: GENERADORES:
Yield from: Simplificar el c�digo de los generadores en el caso de utilizar 
bucles anidados.

CLASE 21, 22, 23: EXCEPCIONES:
Son errores que ocurren durante la ejecuc�n del programa
Podemos usar varias cl�usulas except de forma consecutiva para capturar 
excepciones consecutivas
Raise: para crear nuestra propia excepción

CLASE 24: POO
Trasladar la natruraleza de los objetos de la videa real al código de programación
Estado: Como se encuentra el objeto
Comportamiento: Cual es el comportamiento del objeto - que puede hacer
Propiedades: Características del objeto

Clase: Modelo donde se redactan las características comunes de un grupo de objetos.
Instancia, ejemplar u objeto de clase: Objeto pertenceciente a una clase.
Modularición: Dividir una aplicación en varias clases.

Diferencia entre función y método:
Un método es una función especial que pertence a la clase donde se esta creando.
La función no pertenece a ninguna clase

self hace referencia al objeto perteneciente a la clase, es lo mismo que this en java, pero en java
estaba de forma implícita.

Un constructor es un método especial que le da estado inicial a los objetos.
